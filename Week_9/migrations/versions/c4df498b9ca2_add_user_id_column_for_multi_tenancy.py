"""Add user_id column for multi-tenancy

Revision ID: c4df498b9ca2
Revises: bc0a09fab789
Create Date: 2025-09-11 17:17:04.881083
"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "c4df498b9ca2"
down_revision = "bc0a09fab789"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create new table 'llm_cache'
    op.create_table(
        "llm_cache",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("question", sa.Text(), nullable=False),
        sa.Column("answer", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("question"),
    )

    # Add 'user_id' column as nullable first
    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.add_column(sa.Column("user_id", sa.Integer(), nullable=True))

    # Populate existing rows with default user_id = 1
    op.execute("UPDATE documents SET user_id = 1")

    # Make 'user_id' column NOT NULL and create foreign key
    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.alter_column("user_id", nullable=False)
        batch_op.alter_column("content", existing_type=sa.TEXT(), nullable=False)
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    # Ensure products.owner_id is NOT NULL
    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.alter_column("owner_id", existing_type=sa.INTEGER(), nullable=False)

    # Optionally, keep these drops only if safe (commented out if you want to preserve)
    # op.drop_table('product_embeddings')
    # op.drop_table('langchain_pg_collection')
    # op.drop_table('product_embeddings_lc')
    # op.drop_table('langchain_pg_embedding')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.alter_column("owner_id", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column("content", existing_type=sa.TEXT(), nullable=True)
        batch_op.drop_column("user_id")

    op.drop_table("llm_cache")

    # ### end Alembic commands ###
